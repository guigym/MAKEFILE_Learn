########优化1：使用类似宏定义方式将一些参数集中，方便维护
OBJ=main.o module1.o module2.o 
RESULT = result.out

#all : main.o module1.o \
#	module2.o   # \换行符号
all : ${OBJ}
	g++ -o $(RESULT) $(OBJ)

#main.o : main.cpp module1.h module2.h
#	g++ -c main.cpp 
#module1.o : module1.cpp module1.h
#	g++ -c module1.cpp
#module2.o : module2.cpp module2.h
#	g++ -c module2.cpp

#####优化2: GNU make 会自动推导同名的.cpp 文件，并且推导出来要调用g++ -c 
main.o : module1.h module2.h
module1.o : module1.h
module2.o : module2.h


.PHONY : clean #####优化3:这里表明clean 是个伪目标文件，防止该名字 与 某个文件名字重合
clean: 
	rm ${RESULT} ${OBJ}
